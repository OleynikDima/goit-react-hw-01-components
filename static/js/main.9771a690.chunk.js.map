{"version":3,"sources":["componets/statistics/Statistics.module.css","componets/friend-list/FriendList.module.css","componets/transaction-history/TransactionHistory.module.scss","componets/Section.js","componets/social-profile/Profile.js","componets/statistics/Statistics.js","componets/friend-list/FriendList.js","componets/transaction-history/TransactionHistory.js","componets/App.js","index.js"],"names":["module","exports","Section","title","children","defaultProps","PropTypes","node","isRequired","BOX_PROFILE","styled","div","CircleImg","img","Description","UlList","ul","Li","li","BorderLi","Name","p","Tag","Location","SpanLabel","span","SpanQuantity","Profiler","name","tag","location","avatar","stats","className","src","alt","followers","views","toString","replace","likes","Statistics","statistics","styles","statlist","map","item","string","rgb","Math","floor","random","style","backgroundColor","key","id","isNaN","Number","slice","label","percentage","FriendList","friends","friend","onLine","isOnline","statusOnLine","statusOffLine","width","TransactionHistory","arrayHistoryRow","transactions","transaction","ind","word","styColor","colorHistory","tdtype","type","split","toUpperCase","amount","currency","headTest","App","Profile","user","statisticsData","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.9771a690.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__qDTnh\",\"title\":\"Statistics_title__418Ek\",\"statlist\":\"Statistics_statlist__18hnP\",\"item\":\"Statistics_item__R-k0Y\",\"label\":\"Statistics_label__3bYBG\",\"percentage\":\"Statistics_percentage__2Dwrq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend-list\":\"FriendList_friend-list__3Pxfh\",\"item\":\"FriendList_item__3hHsF\",\"status\":\"FriendList_status__1EsrS\",\"statusOffLine\":\"FriendList_statusOffLine__2F9qI FriendList_status__1EsrS\",\"statusOnLine\":\"FriendList_statusOnLine__19NCo FriendList_status__1EsrS\",\"avatar\":\"FriendList_avatar__mBJjO\",\"name\":\"FriendList_name__1Dn-D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transaction\":\"TransactionHistory_transaction__2SkxP\",\"tdtype\":\"TransactionHistory_tdtype__1Ge0E\",\"colorHistory\":\"TransactionHistory_colorHistory__1ATRh\"};","import React from 'react';\nimport PropTypes from 'prop-types';\n\n\nfunction Section ({title, children}){\n    return (<section>\n       <h1> {title}</h1>\n        {children}\n    </section>)\n}\n\nSection.defaultProps = {\n    title:'',\n    children:PropTypes.node.isRequired,\n}\n\nexport default Section;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\n\n// пробовал написать inline -js .. не сильно зашло но разобраться стоило \nconst BOX_PROFILE = styled.div`\n        width:250px;\n        height:330px;\n        border-radius:2%;\n        box-shadow:0 2px 8px -2px black;\n        background-color:white;\n        border:1px solid #e4e9f0;   \n        background-color:#f3f6f9;\n\n`;\n\nconst CircleImg = styled.img`\n        /* margin-top:30px; */\n        margin: 0;\n        width:38%;\n        border-radius:50%;\n`;\n\nconst Description = styled.div`\n    padding:30px 0;\n    display:flex;\n    flex-direction:column;\n    align-items:center;\n    justify-content:space-between;\n    height:256px;\n    border-radius:2% 2% 0 0;\n    background-color:white;\n`;\n\nconst UlList = styled.ul`\n    width:100%;\n    display:flex;\n    padding:0;\n    margin:0;\n    border-top:1px solid #e4e9f0;\n`;\n\nconst Li = styled.li`\n    /* background-color:#f3f6f9; */\n    text-align:center;\n    font-size: 12px;\n    width:33%;\n    height:72px;\n    display:flex;\n    flex-direction:column;\n    justify-content:center;\n    list-style:none;   \n`;\n\nconst BorderLi = styled(Li)`\n    border-right:1px solid #e4e9f0;\n    border-left:1px solid #e4e9f0;\n`;\n\nconst Name = styled.p`\n  font-size: 18px;  \n  color: #122236;\n  font-weight: 700;\n  font-family: \"Lato\";\n  margin:0;\n`;\n\nconst Tag = styled.p`\n  font-size: 14px;\n  color: #768696;\n  font-weight: 400;\n  font-family: \"Lato\";\n  margin:0;\n  /* padding:0;\n  padding-bottom:10px; */\n`;\n\nconst Location = styled.p`\n    font-size: 14px;\n    color: #768696;\n    font-weight: 400;\n    font-family: \"Lato\";\n    margin:0;\n`;\n\nconst SpanLabel = styled.span`\n    font-size: 12px;\n    color: #768696;\n    font-weight: 400;\n    font-family: \"Lato\";\n    padding-bottom:4px;\n`;\n\nconst SpanQuantity = styled.span`\n  font-size: 14px;\n  color: #1f3349;\n  font-weight: 900;\n  font-family: \"Lato\";\n`;\n\n//Create Temp \nfunction Profiler({name,tag,location,avatar,stats}){\n  // to add commas\n  const numberWithCommas = x => x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n\n\n    return (\n      <BOX_PROFILE className=\"profile\">\n        <Description className=\"description\">\n          <CircleImg\n            src={avatar}\n            alt={name}\n            className=\"avatar\"\n          />\n          <Name className=\"name\">{name}</Name>\n          <Tag className=\"tag\">@{tag}</Tag>\n          <Location className=\"location\">{location}</Location>\n        </Description>\n      \n        <UlList className=\"stats\">\n          <Li>\n            <SpanLabel className=\"label\">Followers </SpanLabel>\n            <SpanQuantity className=\"quantity\">{stats.followers}</SpanQuantity>\n          </Li>\n          <BorderLi>\n            <SpanLabel className=\"label\">Views </SpanLabel>\n            <SpanQuantity className=\"quantity\">{numberWithCommas(stats.views)}</SpanQuantity>\n          </BorderLi>\n          <Li>\n            <SpanLabel className=\"label\">Likes </SpanLabel>\n            <SpanQuantity className=\"quantity\">{stats.likes}</SpanQuantity>\n          </Li>\n        </UlList>\n      </BOX_PROFILE>\n    );\n}\n\nProfiler.defaultProps ={\n        avatar: 'https://dummyimage.com/640x480/2a2a2a/ffffff&text=Product+image+placeholder'\n}\n\n\nProfiler.propTypes ={\n  // to do prop type corect \n    avatar:PropTypes.string.isRequired,\n    name:PropTypes.string.isRequired,\n    tag:PropTypes.string.isRequired,\n    location:PropTypes.string.isRequired,\n    stats:PropTypes.exact({\n        followers:PropTypes.number.isRequired,\n        views:PropTypes.number.isRequired,\n        likes:PropTypes.number.isRequired,\n    })\n}\n\nexport default Profiler;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Statistics.module.css'\n\n\n// немного запутался в title он в принцыпе есть в секции но тут я сделал div (в задание давалось иначе )\n\n\nfunction Statistics({title, statistics}){\n  // checking for id \nconst stringId = string => isNaN(string) ?  Number(string.slice(3)) : string\n\n    return (\n        <div className={styles.statistics}>\n          <h2 className={styles.title}>{title}</h2>\n\n          <ul className={styles.statlist}>\n            { \n            statistics.map(item => \n                  {\n                    //random color \n                    \n                    const rgb = \n                    'rgb(' + Math.floor(Math.random()*256) \n                     + ',' + Math.floor(Math.random()*256)\n                     + ',' + Math.floor(Math.random()*256) \n                     + ')'\n                      \n        \n                     return <li style={{\n                       backgroundColor:rgb}} \n                        className={styles.item} key={stringId(item.id)} >\n                        <span className={styles.label}>{item.label} </span>\n                        <span className={styles.percentage}>{item.percentage} %</span>\n                      </li>\n                    \n                  })\n               }\n          </ul>\n        </div>\n         )\n}\n\nStatistics.propTypes={\n  statistics: PropTypes.arrayOf(\n    PropTypes.shape({\n        item:PropTypes.objectOf({\n          id:PropTypes.number.isRequired,\n          label:PropTypes.string.isRequired,\n          percentage:PropTypes.number.isRequired,\n      })\n    }),\n   ).isRequired,\n  }\n\n\nexport default Statistics;","import React from 'react';\nimport PropTypes from 'prop-types'\nimport styles from './FriendList.module.css'\n\n\nfunction FriendList({friends}){\n    // style online user\n    const onLine = (onLine) => \n        onLine ? styles.statusOnLine :styles.statusOffLine\n\n    return (\n     <ul className={styles['friend-list']}>\n         {friends.map(friend => {\n             return  <li className={styles.item} key={friend.id}>\n                     <span className={onLine(friend.isOnline)}></span>\n                     <img className={styles.avatar} src={friend.avatar} alt={friend.name} width=\"48\" />\n                     <p className={styles.name}>{friend.name}</p>\n                     </li> \n                                }\n                     )\n         }\n    </ul>\n    )\n}\n\nFriendList.defaultProps ={\n    avatar: 'https://dummyimage.com/640x480/2a2a2a/ffffff&text=Product+image+placeholder'\n}\n\n\nFriendList.propTypes ={\n    friend:PropTypes.exact({\n        id:PropTypes.string,\n        isOnline:PropTypes.bool.isRequired,\n        avatar:PropTypes.string.isRequired,\n        name:PropTypes.string.isRequired, \n    })\n}\n\nexport default FriendList;","import React from 'react';\nimport PropTypes from 'prop-types'\nimport styles from './TransactionHistory.module.scss'\n\n\n// функция возвращает елемент с большой буквы \nfunction UpperCaseFirstWord(word){\n  return word.split('')[0].toUpperCase() + word.slice(1)\n}\n\n\nfunction TransactionHistory({transactions}){\n \n  const arrayHistoryRow = transactions.map((transaction,ind) => {\n    // чередуем стиль каждой строки \n     const styColor  = ind % 2 === 0 ? styles.colorHistory: 0\n\n    // возвращает  row\n    return <tr key={transaction.id} className ={styColor}>\n              <td className={styles.tdtype}>{UpperCaseFirstWord(transaction.type)}</td>\n              <td>{transaction.amount}</td>\n              <td>{transaction.currency}</td>\n           </tr>\n})\n  // возвращаем таблицу\n    return (\n        <table className={styles.transaction}>\n  <thead >\n    <tr>\n      <th className={styles.headTest}>Type</th>\n      <th>Amount</th>\n      <th>Currency</th>\n    </tr>\n  </thead>\n\n  <tbody >\n      {arrayHistoryRow}\n  </tbody>\n</table>\n    )\n}\n\n\n// PropTypes\nTransactionHistory.propTypes ={\n  transaction:PropTypes.shape({\n    type:PropTypes.string.isRequired,\n    amount:PropTypes.number.isRequired,\n    currency:PropTypes.string.isRequired,\n  })\n}\n\n\nexport default TransactionHistory;","import React from 'react';\nimport Section from './Section';\nimport './App.scss'\n\n//Profile \nimport Profile from './social-profile/Profile';\nimport user from './social-profile/user.json';\n\n//Statistics\nimport Statistics from './statistics/Statistics';\nimport statisticsData from './statistics/statistical-data.json'\n\n//Friend liset\nimport FriendList from './friend-list/FriendList';\nimport friends from './friend-list/frieds.json';\n\n//Transaction History\nimport TransactionHistory from './transaction-history/TransactionHistory';\nimport transactions from './transaction-history/transactions.json';\n\n//Profile,FriendsList,Statistics,TransactionHistory - это наш шаблоны, to do temp \n//Подключаем json инфа,\n\n\nexport default function App(){\n    return (\n        \n    <>\n         <Section title=\"Profile\">\n             <Profile \n             name={user.name}\n             tag={user.tag}\n             location={user.location}\n             avatar={user.avatar}\n             stats={user.stats}\n             />\n         </Section>\n        \n         <Section title=\"Statistic\">\n             <Statistics \n             title ='Upload stats'\n             statistics={statisticsData}/> \n         </Section>\n\n         <Section title=\"FriedsList\">\n             <FriendList friends={friends}/>\n         </Section>\n\n         <Section title=\"TransactionHistory\">\n             <TransactionHistory transactions={transactions}/>\n         </Section>\n     </>\n    )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './componets/App';\n\n\nReactDOM.render(<App/>, document.querySelector('#root'))"],"sourceRoot":""}